<?php
function index_ALL(Web $w) {
	$p = $w->pathMatch("install", "step", "step_number");
<<<<<<< HEAD
	
	// Redirect to install of no actions given
	if(empty($p['install'])) {
		$w->redirect('install/step/1');
	}
	
	// Set current step
	$step = !empty($p['step_number']) ? intval($p['step_number']) : 1;
	
	// Redirect to first step if no POST data for step 2/3/4
	if ($step > 1 && $_SERVER["REQUEST_METHOD"] != "POST") {
		$w->redirect('install/step/1');
	}
	$w->ctx("step", $step);
	
	// Form action is the next step (@TODO: What happens with errors?)
	$form_action = "/install/step/" . ($step+1);
	
	// Build database details form
	$form_details = [
		"Database Connection" => [
			[["Driver", "select", "db_driver", $w->request("db_driver", "mysql"), PDO::getAvailableDrivers()]],
			[
				["Hostname", "text", "db_hostname", $w->request("db_hostname", "localhost")],
				["Port", "text", "db_port", $w->request("db_port", "3306")]
			],
			[
				["Username", "text", "db_username", $w->request("db_username")],
				["Password", "password", "db_password", $w->request("db_password")]
			],
		]
	];

	$w->ctx("form_details", Html::multiColForm($form_details, $w->localUrl("/install/step/2"), "POST", "Check Connection", "install_form", null, null, "_self", true, 
		["db_driver" => ["required"], "db_username" => ["required"], "db_password" => ["required"], "db_port" => ["required"], "db_hostname" => ["required"]]));
	
	// Decide what piece of functionality to dispaly
	switch($step) {
		case 2: {
			// Attempt to connect to the database
			$port = isset($_POST['db_port']) && !empty($_POST['db_port']) ? ";port=".$_POST['db_port'] : "";
			$url = "{$_POST['db_driver']}:host={$_POST['db_hostname']}{$port}";
			try {
				$pdo = new PDO($url, $_POST['db_username'], $_POST['db_password']);
			} catch(PDOException $e) {
				$w->ctx('error', "Couldn't connect to the database!<br />".$e->getMessage());
				return;
			}
			$w->ctx('info', 'Successfully connected to database');
			
			// Get list fo databases
			$sql = 'SHOW databases;';
			$databases = array();
			foreach($pdo->query($sql) as $row) {
				if($row['0'] != 'information_schema') {
					$hasTables = !empty($pdo->exec("USE {$row[0]}; SHOW TABLES;"));
					$databases[] = array($row[0] . ($hasTables ? " DATABASE IS NOT EMPTY" : ""), $row[0]);
				}
			}

			$form_database = [
				"Select a database" => [
					[["", "select", "selected_database", null, $databases]]
				]
			];
			
			$w->ctx("form_database", Html::multiColForm($form_database, $w->localUrl("/install/step/3"), "POST", "Import required tables", "install_form", null, null, "_self", true, ["selected_database" => ["required"]]));
			break;
		}
		case 3: {
			$port = isset($_POST['db_port']) && !empty($_POST['db_port']) ? ";port=".$_POST['db_port'] : "";
			$url = "{$_POST['db_driver']}:dbname={$_POST['selected_database']};host={$_POST['db_hostname']}{$port}";
			try {
				$pdo = new PDO($url, $_POST['db_username'], $_POST['db_password']);
			} catch(PDOException $e) {
				$w->ctx('error', "Couldn't connect to the database!<br />".$e->getMessage());
				return;
			}
			
			// Clear database and import all SQL scripts
			$sql = 'SHOW TABLES;';
			foreach($pdo->query($sql) as $row) {
				$pdo->exec("DROP TABLE {$row[0]};");
			}
			$pdo->exec(file_get_contents('system/install/db.sql'));
			foreach(glob('system/install/updates/*.sql') as $file) {
				$pdo->exec(file_get_contents($file));
			}
			$pdo->exec(file_get_contents('system/install/dbseed.sql'));
			$pdo->exec(file_get_contents('system/install/userscontactsroles.sql'));
			$w->ctx('info', 'Database tables successfully imported');
			
			// Build the config form
//			$config_form = [
//				"Application Information" => [
//					[["Application Name", ]]
//				]
//			];
//			
			break;
		}
		case 4: {
			$tpl = new WebTemplate();
			$tpl->set_vars($_POST);
			$config = "<?php\n";
			$config .= $tpl->fetch('system/modules/install/templates/config.tpl.php');
			file_put_contents('config.php', $config);
			break;
		}
		// First screen is default
		case 1:
		default: {
			
		}
=======
	if(empty($p['install']) || empty($p['step_number'])) $w->redirect('/install/step/1');
	$step = $p['step_number'];
	$w->ctx("step", $step);
	$w->ctx("form_action", "/install/step/"+($step+1));
	$drivers = '';
	foreach(PDO::getAvailableDrivers() as $driver) {
		$drivers .= "<option>$driver</option>";
	}
	$w->ctx('step_description', 'Database details');
	if('' == $drivers) {
		$w->ctx('error', "No database drivers available!");
		return;
	}
	$w->ctx('driver_options', $drivers);
	if($step == 2) {
		if(!empty($_POST)) {
			if(empty($_POST['db_username'])) {
				$w->ctx('error', "Database username cannot be empty");
			} else if(empty($_POST['db_hostname'])) {
				$w->ctx('error', "Database hostname cannot be empty");
			}
			$port = isset($_POST['db_port']) && !empty($_POST['db_port']) ? ";port=".$_POST['db_port'] : "";
			$_SESSION['install_db_port'] = $port;
			$_SESSION['install_db_driver'] = $_POST['db_driver'];
			$_SESSION['install_db_hostname'] = $_POST['db_hostname'];
			$_SESSION['install_db_username'] = $_POST['db_username'];
			$_SESSION['install_db_password'] = $_POST['db_password'];
		}
		$url = "{$_SESSION['install_db_driver']}:host={$_SESSION['install_db_hostname']}{$_SESSION['install_db_port']}";
		try {
			$pdo = new PDO($url, $_SESSION['install_db_username'], $_SESSION['install_db_password']);
		} catch(PDOException $e) {
			$w->ctx('error', "Couldn't connect to the database!");
			$w->ctx('step', 1);
			$w->ctx("form_action", "/install/step/2");
			return;
		}
		$w->ctx('info', 'Successfully connected to database');
		$sql = 'SHOW databases;';
		$databases = array();
		foreach($pdo->query($sql) as $row) {
			if(!in_array($row['0'], array('mysql', 'information_schema', 'performance_schema'))) {
				$databases[$row[0]] = array();
			}
		}
		foreach($databases as $database=>$tables) {
			$pdo->exec("USE $database;");
			foreach($pdo->query('SHOW TABLES;') as $row) {
				$databases[$database][] = $row[0];
			}
		}
		$w->ctx('step_description', 'Database selection');
		$w->ctx('databases', $databases);
	} else if($step == 3) {
		if(!empty($_POST)) {
			$_SESSION['install_db_database'] = $_POST['db_database'];
		}
		try {
			$url = "{$_SESSION['install_db_driver']}:dbname={$_SESSION['install_db_database']};host={$_SESSION['install_db_hostname']}{$_SESSION['install_db_port']}";
			$pdo = new PDO($url, $_SESSION['install_db_username'], $_SESSION['install_db_password']);
		} catch(PDOException $e) {
			$w->ctx('error', "Couldn't connect to the database!");
			return;
		}
		//Make sure database is empty...
		$sql = 'SHOW TABLES;';
		foreach($pdo->query($sql) as $row) {
			$pdo->exec("DROP TABLE {$row[0]};");
		}
		$pdo->exec(file_get_contents('system/install/db.sql'));
		foreach(glob('system/install/updates/*.sql') as $file) {
			$pdo->exec(file_get_contents($file));
		}
		$pdo->exec(file_get_contents('system/install/dbseed.sql'));
		//$pdo->exec(file_get_contents('system/install/userscontactsroles.sql'));
		$w->ctx('info', 'Database tables successfully imported');
		$w->ctx('step_description', 'Configuration options');
	} else if($step == 4) {
		$w->ctx('step_description', 'Install complete');
		try {
			$url = "{$_SESSION['install_db_driver']}:dbname={$_SESSION['install_db_database']};host={$_SESSION['install_db_hostname']}{$_SESSION['install_db_port']}";
			$pdo = new PDO($url, $_SESSION['install_db_username'], $_SESSION['install_db_password']);
		} catch(PDOException $e) {
			$w->ctx('error', "Couldn't connect to the database!");
			return;
		}
		//Add admin user
		$statement = $pdo->prepare('INSERT INTO contact(firstname,lastname,email) VALUES(:firstname,:lastname,:email)');
		$statement->execute(array(
			':firstname' => $_POST['firstname'],
			':lastname' => $_POST['lastname'],
			':email' => $_POST['email'],
		));
		$statement->closeCursor();
		$contactId = $pdo->lastInsertId();
		$statement = $pdo->prepare('INSERT INTO user(login,password,password_salt,contact_id,is_admin,is_active) VALUES(:login,:password,:password_salt,:contact_id,:is_admin,:is_active)');
		$salt = md5(uniqid(rand(), TRUE));
		$password = sha1($salt . $_POST['admin_password']);
		$statement->execute(array(
			':login' => $_POST['admin_user'],
			':password' => $password,
			':password_salt' => $salt,
			':contact_id' => $contactId,
			':is_admin' => 1,
			':is_active' => 1
		));
		$tpl = new WebTemplate();
		$vars = array(
			'application_name' => $_POST['app_name'],
			'company_name' => $_POST['company_name'],
			'company_url' => $_POST['company_url'],
			'timezone' => $_POST['timezone'],
			'db_hostname' => $_SESSION['install_db_hostname'],
			'db_username' => $_SESSION['install_db_username'],
			'db_password' => $_SESSION['install_db_password'],
			'db_database' => $_SESSION['install_db_database'],
			'db_driver' => $_SESSION['install_db_driver'],
			'email_layer' => $_POST['email_layer'],
			'email_host' => $_POST['email_host'],
			'email_auth' => isset($_POST['email_auth']),
			'email_username' => $_POST['email_username'],
			'email_password' => $_POST['email_password'],
			'rest_api_key' => $_POST['rest_api_key'],
			'checkCSRF' => isset($_POST['checkCSRF']),
			'allow_from_ip' => array_values($_POST['allow_from_ip']),
		);
		$tpl->set_vars($vars);
		$config = "<?php\n";
		$config .= $tpl->fetch('system/modules/install/templates/config.tpl.php');
		file_put_contents('config.php', $config);
		$w->ctx('info', 'Install complete');
>>>>>>> pr/159
	}
}
